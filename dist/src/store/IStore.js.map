{"version":3,"file":"IStore.js","sourceRoot":"/","sources":["src/store/IStore.ts"],"names":[],"mappings":";;;AAAa,QAAA,SAAS,GAAG;IACrB,IAAI,EAAE,GAAG;IACT,MAAM,EAAE,GAAG;IACX,MAAM,EAAE,GAAG;IACX,KAAK,EAAE,GAAG;IACV,KAAK,EAAE,GAAG;IACV,mBAAmB,EAAE,KAAK;IAC1B,iBAAiB,EAAE,KAAK;IACxB,WAAW,EAAE,IAAI;IACjB,yBAAyB,EAAE,MAAM;IACjC,uBAAuB,EAAE,MAAM;IAC/B,gBAAgB,EAAE,GAAG;IACrB,8BAA8B,EAAE,KAAK;IACrC,4BAA4B,EAAE,KAAK;IACnC,gBAAgB,EAAE,GAAG;IACrB,SAAS,EAAE,IAAI;IACf,mBAAmB;IACnB,WAAW,EAAE,GAAG;CACnB,CAAA","sourcesContent":["export const TypeNames = {\n    User: \"u\",\n    Router: \"r\",\n    Device: \"d\",\n    Stage: \"s\",\n    Group: \"g\",\n    CustomGroupPosition: \"cgp\",\n    CustomGroupVolume: \"cgv\",\n    StageMember: \"sm\",\n    CustomStageMemberPosition: \"csmp\",\n    CustomStageMemberVolume: \"csmv\",\n    RemoteAudioTrack: \"a\",\n    CustomRemoteAudioTrackPosition: \"cap\",\n    CustomRemoteAudioTrackVolume: \"cav\",\n    RemoteVideoTrack: \"v\",\n    SoundCard: \"sc\",\n    //ChatMessage: \"c\",\n    ChatMessage: \"c\",\n}\n\ninterface IStore {\n    /*\n    // we could implement this explicit like:\n    createUser: (initial: Partial<User>) => Promise<User>;\n    readUser: (id: UserId) => Promise<User>;\n    updateUser: (update: Partial<User>) => Promise<any>;\n    deleteUser: (id: UserId) => Promise<any>;\n    */\n\n    /* Or lazy like: :-D */\n    create: <T>(type: string, initial: Partial<T>) => Promise<T>;\n    read: <T>(type: string, id: string, filter?: Partial<T>) => Promise<T>;\n    readOne: <T>(type: string, filter: Partial<T>) => Promise<T>;\n    readMany: <T>(type: string, filter: Partial<T>) => Promise<T[]>;\n    update: <T>(type: string, id: string, update: Partial<T>, filter?: Partial<T>) => Promise<void>;\n    upsert: <T>(type: string, initial: Partial<T>, filter: Partial<T>) => Promise<Partial<T> & { id: string, created: boolean }[]>;\n    delete: <T>(type: string, id: string, filter?: Partial<T>) => Promise<string>;\n    deleteMany: <T>(type: string, filter?: Partial<T>) => Promise<string[]>;\n\n    //updateByValue: <T>(type: string, update: Partial<T>, ...selectors: [{ [key: string]: string }]) => Promise<void>;\n}\n\nexport default IStore;\n"]}