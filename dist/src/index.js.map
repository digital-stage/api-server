{"version":3,"file":"index.js","sourceRoot":"/","sources":["src/index.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AACnC,kCAAkC;AAClC,+BAAsC;AACtC,qCAA8B;AAC9B,0DAAmD;AAEnD,MAAM,EAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC,GAAG,gBAAM,CAAC,YAAY,CAAC,CAAC;AAEjD,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;AACtB,MAAM,EAAE,GAAG,IAAI,oBAAW,CAAC,GAAG,EAAE;IAC5B,QAAQ,EAAE,eAAS;CACtB,CAAC,CAAC;AAEH,EAAE,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAC;AAE/B,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,UAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;KAC1D,IAAI,EAAE,CAAC","sourcesContent":["import {UWSProvider} from \"teckos\";\nimport * as uWS from \"teckos/uws\";\nimport {PORT, REDIS_URL} from \"./env\";\nimport logger from \"./logger\";\nimport SocketHandler from \"./socket/SocketHandler\";\n\nconst {warn, error, info} = logger(\"api-server\");\n\nconst uws = uWS.App();\nconst io = new UWSProvider(uws, {\n    redisUrl: REDIS_URL,\n});\n\nio.onConnection(SocketHandler);\n\nconst start = () => io.listen(PORT ? parseInt(PORT, 10) : 3000)\n    .then();\n"]}