{"version":3,"file":"sendToUser.js","sourceRoot":"/","sources":["src/socket/send/sendToUser.ts"],"names":[],"mappings":";;AAEA,mCAAsD;AACtD,yCAAkC;AAElC,MAAM,EAAC,KAAK,EAAC,GAAG,gBAAM,CAAC,YAAY,CAAC,CAAC;AAErC,MAAM,UAAU,GAAG,CAAC,EAAmB,EAAE,MAAc,EAAE,KAAa,EAAE,OAAa,EAAQ,EAAE;IAC3F,IAAI,kBAAY,EAAE;QACd,IAAI,mBAAa,EAAE;YACf,KAAK,CAAC,GAAG,MAAM,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SAC3D;aAAM;YACH,KAAK,CAAC,GAAG,MAAM,KAAK,KAAK,EAAE,CAAC,CAAC;SAChC;KACJ;IACD,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;AAC7C,CAAC,CAAA;AACD,kBAAe,UAAU,CAAC","sourcesContent":["import {ITeckosProvider} from \"teckos\";\nimport {UserId} from \"../../../types/IdTypes\";\nimport {DEBUG_EVENTS, DEBUG_PAYLOAD} from \"../../env\";\nimport logger from \"../../logger\";\n\nconst {trace} = logger(\"sendTouser\");\n\nconst sendToUser = (io: ITeckosProvider, userId: UserId, event: string, payload?: any): void => {\n    if (DEBUG_EVENTS) {\n        if (DEBUG_PAYLOAD) {\n            trace(`${userId} ${event}: ${JSON.stringify(payload)}`);\n        } else {\n            trace(`${userId}' ${event}`);\n        }\n    }\n    io.to(userId.toString(), event, payload);\n}\nexport default sendToUser;"]}